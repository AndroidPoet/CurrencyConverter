// Generated by Dagger (https://dagger.dev).
package com.androidpoet.currencyconverter.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import kotlin.coroutines.CoroutineContext;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideCoroutineContextFactory implements Factory<CoroutineContext> {
  private final DataModule module;

  public DataModule_ProvideCoroutineContextFactory(DataModule module) {
    this.module = module;
  }

  @Override
  public CoroutineContext get() {
    return provideCoroutineContext(module);
  }

  public static DataModule_ProvideCoroutineContextFactory create(DataModule module) {
    return new DataModule_ProvideCoroutineContextFactory(module);
  }

  public static CoroutineContext provideCoroutineContext(DataModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideCoroutineContext());
  }
}
