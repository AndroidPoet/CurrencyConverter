// Generated by Dagger (https://dagger.dev).
package com.androidpoet.currencyconverter.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import io.ktor.client.HttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideNetworkClientFactory implements Factory<HttpClient> {
  private final DataModule module;

  public DataModule_ProvideNetworkClientFactory(DataModule module) {
    this.module = module;
  }

  @Override
  public HttpClient get() {
    return provideNetworkClient(module);
  }

  public static DataModule_ProvideNetworkClientFactory create(DataModule module) {
    return new DataModule_ProvideNetworkClientFactory(module);
  }

  public static HttpClient provideNetworkClient(DataModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideNetworkClient());
  }
}
